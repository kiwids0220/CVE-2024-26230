#pragma once
typedef struct TAPI_STRUCT {
    uint32_t index;
    unsigned char INTERFACE_NAME[5];
    BYTE whatever[0x100];
} TAPI_STRUCT, * PTAPI_STRUCT;

typedef struct TAPI_GetUIDllName {
    uint32_t int_index0;
    uint32_t int_index1;
    uint32_t int_index2;
    uint32_t switchacse_index3;
    uint32_t int_index4;
    uint32_t int_index5;
    uint32_t int_index6;
    uint32_t int_index7;
    //index storing the object. ex. 0x
    uint32_t object_index;

    BYTE whatever[0x100];

} TAPI_GetUIDllName, * PTAPI_GetUIDllName;

typedef struct TAPI_FreeDiagInstance {
    uint32_t int_index0;
    uint32_t int_index1;
    uint32_t int_index2;
    uint32_t switchacse_index3;
    uint32_t int_index4;
    uint32_t int_index5;
    uint32_t int_index6;
    uint32_t int_index7;
    //index storing the object. ex. 0x
    uint32_t object_index;

    BYTE whatever[0x100];

} TAPI_FreeDiagInstance, * PTAPI_FreeDiagInstance;



typedef struct TAPI_TUISPIDLLCallback {
    uint32_t int_index0;
    uint32_t int_index1;
    uint32_t int_index2;
    uint32_t switchacse_index3;
    uint32_t int_index4;
    uint32_t int_index5;
    uint32_t int_index6;
    uint32_t int_index7;
    //index storing the object. ex. 0x
    uint32_t object_index;

    BYTE whatever[0x100];

} TAPI_TUISPIDLLCallback, * PTAPI_TUISPIDLLCallback;

typedef struct TAPI_ResultBuffer {
    PCONTEXT_HANDLE_TYPE context;
    uint32_t object_index;

} TAPI_ResultBuffer, * PTAPI_ResultBuffer;

enum GaFuncs : uint32_t {
    GetAsyncEvents = 0,
    GetUIDllName,
    TUISPIDLLCallback,
    FreeDialogInstance,
    LAccept,
    LAddToConference,
    LAgentSpecific,
    LAnswer,
    LBlindTransfer,
    LClose,
    LCompleteCall,
    LCompleteTransfer,
    LDeallocateCall,
    LDevSpecific,
    LDevSpecificFeature,
    LDial,
    LDrop,
    LForward,
    LGatherDigits,
    LGenerateDigits,
    LGenerateTone,
    LGetAddressCaps,
    LGetAddressID,
    LGetAddressStatus,
    LGetAgentActivityList,
    LGetAgentCaps,
    LGetAgentGroupList,
    LGetAgentStatus,
    LGetAppPriority,
    LGetCallAddressID,
    LGetCallInfo,
    LGetCallStatus,
    LGetConfRelatedCalls,
    LGetCountry,
    LGetDevCaps,
    LGetDevConfig,
    LGetIcon,
    LGetID,
    LGetLineDevStatus,
    LGetNewCalls,
    LGetNumAddressIDs,
    LGetNumRings,
    LGetProviderList,
    LGetRequest,
    LGetStatusMessages,
    LHandoff,
    LHold,
    LInitialize,
    LMakeCall,
    LMonitorDigits,
    LMonitorMedia,
    LMonitorTones,
    LNegotiateAPIVersion,
    LNegotiateExtVersion,
    LOpen,
    LPark,
    LPickup,
    LPrepareAddToConference,
    LProxyMessage,
    LProxyResponse,
    LRedirect,
    LRegisterRequestRecipient,
    LReleaseUserUserInfo,
    LRemoveFromConference,
    LSecureCall,
    LSendUserUserInfo,
    LSetAgentActivity,
    LSetAgentGroup,
    LSetAgentState,
    LSetAppPriority,
    LSetAppSpecific,
    LSetCallData,
    LSetCallParams,
    LSetCallPrivilege,
    LSetCallQualityOfService,
    LSetCallTreatment,
    LSetDefaultMediaDetection,
    LSetDevConfig,
    LSetLineDevStatus,
    LSetMediaControl,
    LSetMediaMode,
    LSetNumRings,
    LSetStatusMessages,
    LSetTerminal,
    LSetupConference,
    LSetupTransfer,
    LShutdown,
    LSwapHold,
    LUncompleteCall,
    LUnhold,
    LUnpark,
    PClose,
    PDevSpecific,
    PGetButtonInfo,
    PGetData,
    PGetDevCaps,
    PGetDisplay,
    PGetGain,
    PGetHookSwitch,
    PGetID,
    PGetIcon,
    PGetLamp,
    PGetRing,
    PGetStatus,
    PGetStatusMessages,
    PGetVolume,
    PInitialize,
    POpen,
    PNegotiateAPIVersion,
    PNegotiateExtVersion,
    PSetButtonInfo,
    PSetData,
    PSetDisplay,
    PSetGain,
    PSetHookSwitch,
    PSetLamp,
    PSetRing,
    PSetStatusMessages,
    PSetVolume,
    PShutdown,
    TRequestDrop,
    TRequestMakeCall,
    TReadLocations,
    TWriteLocations,
    TAllocNewID,
    TPerformance,
    LConditionalMediaDetection,
    LSelectExtVersion,
    PSelectExtVersion,
    NegotiateAPIVersionForAllDevices,
    MGetAvailableProviders,
    MGetLineInfo,
    MGetPhoneInfo,
    MGetServerConfig,
    MSetLineInfo,
    MSetPhoneInfo,
    MSetServerConfig,
    LMSPIdentify,
    LReceiveMSPData,
    LGetCallHubTracking,
    LGetCallIDs,
    LGetHubRelatedCalls,
    LSetCallHubTracking,
    PrivateFactoryIdentify,
    LDevSpecificEx,
    LCreateAgent,
    LCreateAgentSession,
    LGetAgentInfo,
    LGetAgentSessionInfo,
    LGetAgentSessionList,
    LGetQueueInfo,
    LGetGroupList,
    LGetQueueList,
    LSetAgentMeasurementPeriod,
    LSetAgentSessionState,
    LSetQueueMeasurementPeriod,
    LSetAgentStateEx,
    LGetProxyStatus,
    LCreateMSPInstance,
    LCloseMSPInstance,
    TSetEventMasksOrSubMasks,
    TGetEventMasksOrSubMasks,
    TSetPermissibleMasks,
    TGetPermissibleMasks,
    MGetDeviceFlags,
    LGetCountryGroups,
    LGetIDEx,
    PGetIDEx
};
